{"remainingRequest":"/Users/7revor/WebstormProjects/vue_press/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/7revor/WebstormProjects/vue_press/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/7revor/WebstormProjects/vue_press/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/7revor/WebstormProjects/vue_press/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/7revor/WebstormProjects/vue_press/docs/Notes/goodsProps.md?vue&type=template&id=30f249eb&","dependencies":[{"path":"/Users/7revor/WebstormProjects/vue_press/docs/Notes/goodsProps.md","mtime":1556091747757},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/cache-loader/dist/cjs.js","mtime":1553505755456},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1553505756301},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/cache-loader/dist/cjs.js","mtime":1553505755456},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/vue-loader/lib/index.js","mtime":1553505756301},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1553505767409}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h2 id=\\\"介绍\\\"><a href=\\\"#介绍\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 介绍</h2> <p>淘宝不同的宝贝类目商品属性不同，他们在本质上分为两类：</p> <ul><li>销售属性（sku）</li> <li>商品属性</li></ul> <p>这里我们只讨论其中的商品属性。</p> <h2 id=\\\"属性\\\"><a href=\\\"#属性\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 属性</h2> <p>通过<code>taobao.itemprops.get</code>获得</p> <p>入参：</p> <ul><li><code>cid</code> 叶子类目ID</li> <li><code>pid</code> 属性id (取类目属性时，传pid，不用同时传PID和parent_pid)</li> <li><code>parent_pid</code>父属性ID</li> <li><code>child_path</code>类目子属性路径,由该子属性上层的类目属性和类目属性值组成,格式<code>pid:vid;pid:vid</code>取类目子属性需要传<code>child_path</code> <code>cid</code></li></ul> <h3 id=\\\"普通字段\\\"><a href=\\\"#普通字段\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 普通字段</h3> <table><thead><tr><th>名称</th> <th>描述</th></tr></thead> <tbody><tr><td><code>pid</code></td> <td>属性id</td></tr> <tr><td><code>parent_pid</code></td> <td>父属性ID</td></tr> <tr><td><code>name</code></td> <td>属性名</td></tr> <tr><td><code>is_key_prop</code></td> <td>是否关键属性</td></tr> <tr><td><code>is_sale_prop</code></td> <td>是否销售属性</td></tr> <tr><td><code>is_color_prop</code></td> <td>是否颜色属性</td></tr> <tr><td><code>is_enum_prop</code></td> <td>是否是可枚举属性</td></tr> <tr><td><code>is_input_prop</code></td> <td>在<code>is_enum_prop</code>是<code>true</code>的前提下，是否是卖家可以自行输入的属性（注：如果<code>is_enum_prop</code>返回<code>false</code>，该参数统一返回<code>false</code>）</td></tr> <tr><td><code>must</code></td> <td>是否为必选属性</td></tr> <tr><td><code>multi</code></td> <td>是否可以多选</td></tr> <tr><td><code>child_template</code></td> <td>子属性的模板</td></tr> <tr><td><code>prop_values</code></td> <td>子属性列表</td></tr> <tr><td><code>is_material</code></td> <td>是否是材质属性项</td></tr> <tr><td><code>material_do</code></td> <td>材质属性信息</td></tr> <tr><td><code>is_taosir</code></td> <td>是否度量衡属性项</td></tr> <tr><td><code>taosir_do</code></td> <td>度量衡属性信息</td></tr></tbody></table> <h3 id=\\\"子属性列表\\\"><a href=\\\"#子属性列表\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 子属性列表</h3> <p><code>prop_values</code></p> <table><thead><tr><th>名称</th> <th>描述</th></tr></thead> <tbody><tr><td><code>pid</code></td> <td>属性 ID</td></tr> <tr><td><code>vid</code></td> <td>属性值ID</td></tr> <tr><td><code>name</code></td> <td>属性值</td></tr> <tr><td><code>is_parent</code></td> <td>是否为父类目属性</td></tr></tbody></table> <h3 id=\\\"材质属性信息\\\"><a href=\\\"#材质属性信息\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 材质属性信息</h3> <p><code>material_do</code></p> <ul><li><code>materials</code> 材质值列表\\n<ul><li><code>name</code> 材质值名称</li> <li><code>need_content_number</code> 是否需要填写含量值</li></ul></li></ul> <h3 id=\\\"度量衡属性信息\\\"><a href=\\\"#度量衡属性信息\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 度量衡属性信息</h3> <p><code>taosir_do</code></p> <ul><li><code>precision</code> 数值小数点精度</li> <li><code>type</code> 时间类型：0表示非时间，1表示时间点，2表示时间范围</li> <li><code>std_unit_list</code> 卖家可选单位List&lt;单位id，单位名&gt;\\n<ul><li><code>attr_key</code> 属性键</li> <li><code>attr_value</code> 属性值</li></ul></li> <li><code>expr_el_list</code> 表达式元素list\\n<ul><li><code>text</code> 显示文本</li> <li><code>is_show_label</code> 是否只用于显示的文本元素</li> <li><code>is_label</code> 是否文本元素，用于显示也用于组装<code>value_name</code>，比如<code>:</code>操作符</li> <li><code>is_input</code> 是否输入框</li> <li><code>type</code> <ul><li><code>0</code>类型为label元素，只用于展示，不用于组装<code>value_name</code></li> <li><code>1</code>类型为label元素，用于展示，用于组装<code>value_name</code></li> <li><code>2</code>类型为输入狂元素，主要用于卖家输入数据. 卖家填写完后需要重新设置该元素的文本数据；</li></ul></li></ul></li></ul> <h2 id=\\\"属性组装\\\"><a href=\\\"#属性组装\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 属性组装</h2> <p>首先过滤掉销售属性 <code>is_sale_prop===false</code></p> <p>初始化一个默认商品，需要组装三个字段</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>item<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n  props<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n  input_pids<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n  input_str<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">''</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><h3 id=\\\"枚举属性\\\"><a href=\\\"#枚举属性\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 枚举属性</h3> <p><code>is_enum_prop===true</code></p> <p><code>is_input_prop===false</code></p> <p><code>prop_values!==null</code></p> <p>枚举属性的处理相对简单，遍历<code>prop_values</code>列表，将用户选择值拼入商品<code>props</code>字段，格式为<code>pid:vid</code></p> <ul><li>用户选择<code>品牌:阿迪达斯</code> <ul><li>品牌pid为<code>20000</code></li> <li>阿迪达斯子属性vid为<code>129808</code></li></ul></li></ul> <p>那么此时商品属性为</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>item<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n  props<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'20000:129808'</span><span class=\\\"token punctuation\\\">,</span>\\n  input_pids<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n  input_str<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">''</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><h3 id=\\\"自定义属性\\\"><a href=\\\"#自定义属性\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 自定义属性</h3> <p><code>is_enum_prop===true</code></p> <p><code>is_input_prop===true</code></p> <p><code>prop_values===null</code></p> <p>将<code>pid</code>拼入<code>input_pids</code>，输入值拼入<code>input_str</code></p> <ul><li>用户输入<code>货号:2019年夏款</code> <ul><li>货号pid为<code>21394</code>\\n那么此时商品属性为</li></ul></li></ul> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>item<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n  props<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'20000:129808'</span><span class=\\\"token punctuation\\\">,</span>\\n  input_pids<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'21394'</span><span class=\\\"token punctuation\\\">,</span>\\n  input_str<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'2019年夏款'</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><h3 id=\\\"枚举-自定义\\\"><a href=\\\"#枚举-自定义\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 枚举&amp;&amp;自定义</h3> <p><code>is_enum_prop===true</code></p> <p><code>is_input_prop===true</code></p> <p><code>prop_values!==null</code></p> <p>有些属性即支持选择也支持自定义输入，此时根据用户操作做判断。如果是选择，那么按枚举属性处理，如果是输入，按自定义输入处理。</p> <h3 id=\\\"子属性\\\"><a href=\\\"#子属性\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 子属性</h3> <h4 id=\\\"作为单独属性\\\"><a href=\\\"#作为单独属性\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 作为单独属性</h4> <p>在枚举属性的前提下，如果用户选择的选项<code>is_parent</code>为<code>true</code>，那么该属性下还有附加子属性。</p> <p>用户选择<code>产地:中国大陆</code></p> <ul><li>产地pid为<code>21299</code></li> <li>中国大陆的属性为</li></ul> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  vid<span class=\\\"token punctuation\\\">:</span><span class=\\\"token number\\\">27772</span><span class=\\\"token punctuation\\\">,</span>\\n  name<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'中国大陆'</span><span class=\\\"token punctuation\\\">,</span>\\n  is_parent<span class=\\\"token punctuation\\\">:</span><span class=\\\"token boolean\\\">true</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><p>此时，再次调用接口<code>taobao.itemprops.get</code>，入参添加<code>child_path</code>为<code>21299:27772</code> ，可获得产地子属性<code>省份</code>，子属性作为单独属性重新做处理。如果子属性选项依旧含有子属性，以此类推直至最末节点。</p> <p>用户最终选择<code>产地:中国大陆</code> <code>省份:山东省</code> <code>城市:临沂市</code></p> <ul><li>产地pid为<code>21299</code> 中国大陆vid为<code>27772</code></li> <li>子属性省份pid为<code>24557</code> 山东省vid为<code>254221</code></li> <li>叶子属性城市pid为<code>31778</code> 临沂市vid为<code>47653222</code></li></ul> <p>那么此时商品属性为</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>item<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n  props<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'20000:129808,21299:27772,24557:254221,31778:47653222'</span><span class=\\\"token punctuation\\\">,</span>\\n  input_pids<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'21394'</span><span class=\\\"token punctuation\\\">,</span>\\n  input_str<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'2019年夏款'</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}