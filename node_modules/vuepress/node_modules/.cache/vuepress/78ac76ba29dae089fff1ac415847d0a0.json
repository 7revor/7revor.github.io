{"remainingRequest":"/Users/7revor/WebstormProjects/vue_press/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/7revor/WebstormProjects/vue_press/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/7revor/WebstormProjects/vue_press/docs/React/titleWrapper.md?vue&type=template&id=6440f62c&","dependencies":[{"path":"/Users/7revor/WebstormProjects/vue_press/docs/React/titleWrapper.md","mtime":1553499444629},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/cache-loader/dist/cjs.js","mtime":1553505755456},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1553505756301},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/cache-loader/dist/cjs.js","mtime":1553505755456},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/vue-loader/lib/index.js","mtime":1553505756301},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1553505767409}],"contextDependencies":[],"result":["\n<div class=\"content\"><h2 id=\"作用\"><a class=\"header-anchor\" href=\"#作用\" aria-hidden=\"true\">#</a> 作用</h2>\n<p>自动封装参数以及设置标题</p>\n<h2 id=\"背景\"><a class=\"header-anchor\" href=\"#背景\" aria-hidden=\"true\">#</a> 背景</h2>\n<p>在qap平台中，使用QN.navigator来跳转</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span>navigator<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      url<span class=\"token punctuation\">:</span> url<span class=\"token punctuation\">,</span>\n      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'标题'</span><span class=\"token punctuation\">,</span>\n      query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span><span class=\"token string\">'7revor'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"缺点\"><a class=\"header-anchor\" href=\"#缺点\" aria-hidden=\"true\">#</a> 缺点</h2>\n<ul>\n<li>传递的页面title只有在第一次进去的时候会显示，刷新页面后就会丢失title。</li>\n<li>使用这个导航进入新页面后，页面传递参数需要手动获取</li>\n</ul>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Util<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'nuke'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> url <span class=\"token operator\">=</span> Util<span class=\"token punctuation\">.</span>Location<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> param <span class=\"token operator\">=</span> <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span>uri<span class=\"token punctuation\">.</span><span class=\"token function\">parseQueryString</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"思考\"><a class=\"header-anchor\" href=\"#思考\" aria-hidden=\"true\">#</a> 思考</h2>\n<p>基于此种不方便的特性以及React高阶组件，简单实现了一个自动封装参数以及title的HOC</p>\n<h3 id=\"具体实现\"><a class=\"header-anchor\" href=\"#具体实现\" aria-hidden=\"true\">#</a> 具体实现</h3>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>createElement<span class=\"token punctuation\">,</span> PureComponent<span class=\"token punctuation\">,</span> render<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rax'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Util<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'nuke'</span>\n<span class=\"token keyword\">import</span> <span class=\"token constant\">QN</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'QAP-SDK'</span>\n\n<span class=\"token comment\">/**\n * 给组件包装一层title,将QAP页面传过来的参数封装到组件的props中\n * @param title：页面标题（刷新不丢失）\n * @param component  组件原型\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">titleWrapper</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title<span class=\"token punctuation\">,</span> component</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">//解析页面参数</span>\n  <span class=\"token keyword\">const</span> param <span class=\"token operator\">=</span> <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span>uri<span class=\"token punctuation\">.</span><span class=\"token function\">parseQueryString</span><span class=\"token punctuation\">(</span>Util<span class=\"token punctuation\">.</span>Location<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"?\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//组件封装</span>\n  <span class=\"token keyword\">const</span> Ele <span class=\"token operator\">=</span> <span class=\"token function\">_titleWrapper</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Ele<span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">_titleWrapper</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title<span class=\"token punctuation\">,</span> param</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">doTitle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> PureComponent <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//每一次渲染页面时，都重新设置标题，防止标题丢失</span>\n        <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span>navigator<span class=\"token punctuation\">.</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            title<span class=\"token punctuation\">:</span> title\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n      <span class=\"token comment\">//封装上一个方法得到的param到组件的props中</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>WrappedComponent <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>param<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>this<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"调用\"><a class=\"header-anchor\" href=\"#调用\" aria-hidden=\"true\">#</a> 调用</h3>\n<p>原本的React页面实现:</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>MyComponent<span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>使用HOC之后：</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>titleWrapper<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> Util\n<span class=\"token function\">titleWrapper</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我是标题'</span><span class=\"token punctuation\">,</span> MyComponent<span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>这样一来，就可以在组件生命周期里使用 this.props来获取qap页面参数。</p>\n</div>\n",null]}