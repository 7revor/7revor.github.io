{"remainingRequest":"/Users/7revor/WebstormProjects/vue_press/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/7revor/WebstormProjects/vue_press/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/7revor/WebstormProjects/vue_press/docs/Notes/publish.md?vue&type=template&id=61fba172&","dependencies":[{"path":"/Users/7revor/WebstormProjects/vue_press/docs/Notes/publish.md","mtime":1555484683490},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/cache-loader/dist/cjs.js","mtime":1553505755456},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1553505756301},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/cache-loader/dist/cjs.js","mtime":1553505755456},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/vue-loader/lib/index.js","mtime":1553505756301},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1553505767409}],"contextDependencies":[],"result":["\n<div class=\"content\"><p>最近刚刚完成了前端的发布宝贝实现，在这里做一个梳理总结\n<!-- more --></p>\n<h2 id=\"主界面\"><a class=\"header-anchor\" href=\"#主界面\" aria-hidden=\"true\">#</a> 主界面</h2>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i3/1810749336/O1CN019HFQa52IpwBhC1kZI_!!1810749336.png?/w/240\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>主界面</em>\n    </p>\n</p>\n<p>主界面作为整个模块的核心页面，承载所有子页面的数据收集，数据处理以及最终的数据拼接</p>\n<h3 id=\"constructor\"><a class=\"header-anchor\" href=\"#constructor\" aria-hidden=\"true\">#</a> <code>constructor</code></h3>\n<ul>\n<li><code>this.controller = new ItemAddController();</code></li>\n</ul>\n<blockquote>\n<p>控制主界面的各种函数</p>\n</blockquote>\n<ul>\n<li><code>state</code></li>\n</ul>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      pic_category_id<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//图片空间类目id,即（普云商品）</span>\n      seller_cids<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> cid<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//店铺类目</span>\n      reg<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//表单验证，价格，库存，标题是否符合规范</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        price<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        num<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">/**\n      * 最重要的商品属性\n      **/</span>\n      item<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>  \n        category<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//所选宝贝分类=>eg. {根类目},{子类目},{叶子类目}，这么写的原因是为了降低category组件展示数据加载延迟</span>\n        props_must<span class=\"token punctuation\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//是否含有必填属性项</span>\n        cid<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//所选类目id</span>\n        has_sku<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>商品是否含有销售属性\n        has_normal_prop<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        sku_prop<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//sku界面传来的属性</span>\n        props<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//商品普通属性串</span>\n        input_str<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>自定义属性串\n        input_pids<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//自定义属性穿</span>\n        desc<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//宝贝描述</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//标题</span>\n        price<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//价格</span>\n        num<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//库存</span>\n        <span class=\"token comment\">/**\n         * 图片数据\n         */</span>\n        img<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">/**\n         * 运费模板信息\n         */</span>\n        postage<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          name<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n          template_id<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n          address<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n          item_weight<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n          item_size<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        address<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//发货地信息</span>\n          provinceId<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n          provinceValue<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n          cityId<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n          cityValue<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">/**\n         * 采购地信息\n         */</span>\n        purchase_option<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          purchase_place<span class=\"token punctuation\">:</span> <span class=\"token string\">'国内'</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//采购地</span>\n          purchase_country<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//采购国家</span>\n          delivery_place<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">//发货地</span>\n            key<span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n            value<span class=\"token punctuation\">:</span> <span class=\"token string\">'国内'</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          inventory_type<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">//库存类型</span>\n            key<span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n            value<span class=\"token punctuation\">:</span> <span class=\"token string\">'现货'</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><blockquote>\n<p>主界面的<code>state</code>控制着用户对宝贝进行编辑后的所有数据处理以及展示</p>\n</blockquote>\n<h3 id=\"componentdidmount\"><a class=\"header-anchor\" href=\"#componentdidmount\" aria-hidden=\"true\">#</a> <code>componentDidMount</code></h3>\n<p>接下来，在页面渲染完成后，进行时间的绑定。由于<code>QAP</code>采用的是多页面架构，所以不同页面件的数据交互就需要通过<code>QAP</code>的事件机制来完成</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code> <span class=\"token keyword\">const</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n    <span class=\"token comment\">/**\n     * 图片选择\n     */</span>\n    <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'App.itemAdd.picSelect'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">.</span><span class=\"token function\">refreshImg</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">/**\n     * 采购地选择\n     */</span>\n    <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'App.itemAdd.purchasePlace'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">.</span>purchase_option <span class=\"token operator\">=</span> data\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">/**\n     * sku编辑界面\n     */</span>\n    <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'App.itemAdd.skuAdd'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">.</span>sku_prop<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n      self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>min_price\n      self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>reg<span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      self<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">/**\n     * 宝贝属性选择\n     */</span>\n    <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'App.itemAdd.propAdd'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">.</span>input_pids <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>input_pids<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span>\n      self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">.</span>input_str <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>input_str<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span>\n      self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">.</span>props <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">';'</span><span class=\"token punctuation\">)</span>\n      self<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">/**\n     * 宝贝详情\n     */</span>\n    <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'App.itemAdd.descSave'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">.</span>desc <span class=\"token operator\">=</span> data\n      self<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">/**\n     * 类目选择\n     */</span>\n    <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'App.itemAdd.cidSelect'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      self<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        seller_cids<span class=\"token punctuation\">:</span> data\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>在界面加载完成后，判断用户图片空间是否存在普云商品发布目录，如果不存在给他新建一个\n<code>this.controller.pic_space_folder_handler.call(this)</code><a href='#pic_space_folder_handler'> &gt;&gt;&gt;&gt;</a></p>\n<h3 id=\"render\"><a class=\"header-anchor\" href=\"#render\" aria-hidden=\"true\">#</a> <code>render</code></h3>\n<p>主界面主要负责数据处理，它的视图比较简单，此处就不一一列举。\n主要对表单验证自己实现了一个小组件。</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token operator\">&lt;</span>ActionRow key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">6</span><span class=\"token punctuation\">}</span>\n           required\n           label<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'一口价'</span><span class=\"token punctuation\">}</span>\n           type<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">}</span>\n           htmlType<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'number'</span><span class=\"token punctuation\">}</span>\n           warn<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'一口价须精确到小数点后两位'</span><span class=\"token punctuation\">}</span>\n           value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">}</span>\n           onInput<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n             self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>value\n           <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n           warnReg<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">const</span> regPrice <span class=\"token operator\">=</span> <span class=\"token regex\">/^\\d+(\\.\\d{1,2})?$/</span><span class=\"token punctuation\">,</span>\n                    flag <span class=\"token operator\">=</span> regPrice<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n              self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>reg<span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> flag\n              <span class=\"token keyword\">return</span> flag\n           <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><code>ActionRow</code> <a href='#actionrow'> &gt;&gt;&gt;&gt;</a></p>\n<hr>\n<h2 id=\"宝贝主图\"><a class=\"header-anchor\" href=\"#宝贝主图\" aria-hidden=\"true\">#</a> 宝贝主图</h2>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i2/1810749336/O1CN01u2KDw62IpwB6Byom7_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>宝贝主图</em>\n    </p>\n</p>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i4/1810749336/O1CN01iBssCP2IpwBeLkRKI_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>宝贝主图2</em>\n    </p>\n</p>\n<p><strong>这里复用了林立全的主图拖拽排序组件</strong></p>\n<p>上传主图使用了三种方式，其中上传本地图片实现比较复杂：</p>\n<ol>\n<li>调用千牛协议</li>\n</ol>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>     <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        api<span class=\"token punctuation\">:</span><span class=\"token string\">'selectFiles'</span><span class=\"token punctuation\">,</span>\n        query<span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span>\n          actions <span class=\"token punctuation\">:</span> type<span class=\"token punctuation\">,</span><span class=\"token comment\">//选取方式，本地相册和拍照</span>\n          limit <span class=\"token punctuation\">:</span> limit<span class=\"token punctuation\">,</span><span class=\"token comment\">//图片数量</span>\n          representation<span class=\"token punctuation\">:</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//图片质量比</span>\n          maxWidth<span class=\"token punctuation\">:</span><span class=\"token string\">'750'</span><span class=\"token comment\">//图片最大宽度</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><blockquote>\n<p>此协议可以得到图片的<code>local</code>地址:<code>file://localpath=%2fUsers%2f2b%2fDesktop%2ftest.txt</code></p>\n</blockquote>\n<ol start=\"2\">\n<li>将图片进行<code>Base64</code>转码</li>\n</ol>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code> <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    api<span class=\"token punctuation\">:</span><span class=\"token string\">'getFileData'</span><span class=\"token punctuation\">,</span>\n    query<span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span>\n      uris <span class=\"token punctuation\">:</span> location\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><blockquote>\n<p>这里遇到一个问题，一次如果多个图片进行转换时，上面的是异步函数，如果用<code>Promise.all</code>一次执行多个，<code>IOS</code>可以正常转换，但是<code>Andriod</code>会报错，所以后期对图片转码进行了同步</p>\n</blockquote>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">upload</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">photos<span class=\"token punctuation\">,</span> cat_id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span>  promises <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> photo <span class=\"token keyword\">of</span> photos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> guid <span class=\"token operator\">=</span> Util<span class=\"token punctuation\">.</span><span class=\"token function\">guid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        uri <span class=\"token operator\">=</span> photo<span class=\"token punctuation\">.</span>uri<span class=\"token punctuation\">,</span>\n        type <span class=\"token operator\">=</span> uri<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> uri<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        location <span class=\"token operator\">=</span> uri <span class=\"token operator\">+</span> <span class=\"token string\">'&amp;mimetype=image/'</span> <span class=\"token operator\">+</span> type<span class=\"token punctuation\">,</span>\n        base64 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getFileStream</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token operator\">=></span>console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        img <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> guid <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> type<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> base64<span class=\"token punctuation\">}</span>\n        promises<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> guid <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> type<span class=\"token punctuation\">,</span> cat_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> promises\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>3.调用<code>TOP</code>接口上传图片到图片空间</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>  <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      method<span class=\"token punctuation\">:</span> <span class=\"token string\">'taobao.picture.upload'</span><span class=\"token punctuation\">,</span>\n      img<span class=\"token punctuation\">:</span>img<span class=\"token punctuation\">,</span>\n      picture_category_id<span class=\"token punctuation\">:</span>cat_id<span class=\"token operator\">||</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      client_type<span class=\"token punctuation\">:</span><span class=\"token string\">'client:computer'</span><span class=\"token punctuation\">,</span>\n      image_input_title<span class=\"token punctuation\">:</span>title\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><blockquote>\n<p>这里有一个大坑，之前调用这个接口，直接把<code>Base64</code>当做入参<code>img</code>一直报错，接口文档里也没有说明，后来才发现这个<code>img</code>入参是有格式要求的&gt;&gt;&gt;\n<code>img = {name: guid + '.' + type, data: base64}</code></p>\n</blockquote>\n<hr>\n<h2 id=\"类目选择器category\"><a class=\"header-anchor\" href=\"#类目选择器category\" aria-hidden=\"true\">#</a> 类目选择器<code>category</code></h2>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i1/1810749336/O1CN01aom2jl2IpwBiw3MXZ_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>级联选择</em>\n    </p>\n</p>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i4/1810749336/O1CN01KOTpWd2IpwBiKU7x4_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>最近使用</em>\n    </p>\n</p>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i3/1810749336/O1CN01vogskH2IpwBiw2UUh_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>搜索</em>\n    </p>\n</p>\n<blockquote>\n<p>类目选选择器写成了一个弹窗式的组件，支持历史记录缓存，模糊查询。</p>\n</blockquote>\n<ul>\n<li>\n<p>这里使用了<code>ReactNatice</code>的<code>Animated</code>类，整理了一下大体的使用方法，附：<a href=\"https://7revor.github.io//React/Animated.html\" target=\"_blank\" rel=\"noopener noreferrer\">参考链接<OutboundLink/></a></p>\n</li>\n<li>\n<p>由于安卓和IOS的差异，呼起键盘时会出现遮挡输入框的问题，这里对此类问题给出一个通用\n<a href='#heightprovider'>处理方法</a></p>\n</li>\n<li>\n<p><a href=\"http://7revor.github.io/React/closeKeyBoard.html\" target=\"_blank\" rel=\"noopener noreferrer\">QAP自动关闭键盘<OutboundLink/></a></p>\n</li>\n<li>\n<p>类目选择器的查询功能由于淘宝没有提供相应的接口，我们将类目数据存入自己的库中进行查询，和<strong>王炜</strong>对接。</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"宝贝描述\"><a class=\"header-anchor\" href=\"#宝贝描述\" aria-hidden=\"true\">#</a> 宝贝描述</h2>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i1/1810749336/O1CN01XpvprS2IpwBgCP7p0_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>宝贝描述</em>\n    </p>\n</p>\n<p>这个地方没啥好说的，主要难点就是<code>QNUI</code>的多行输入框必须固定尺寸或者行数，没法根据文本长度自动撑开，和<code>pc</code>端不同的是，又没办法获取<code>dom</code>元素的尺寸，所以只能自己计算(有一定的偏差)</p>\n<ul>\n<li>一个汉字差不多正好是两个字节的长度，一屏为24个汉字的长度</li>\n</ul>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code> <span class=\"token function\">getLength</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/[\\u0391-\\uFFE5]/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"aa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ul>\n<li>对<code>Input</code>的输入事件进行监听</li>\n</ul>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>onInput<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>value\n      <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">let</span> rows <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span>length\n      arr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">s</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> length <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span><span class=\"token function\">getLength</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n          rows<span class=\"token operator\">+=</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>length<span class=\"token operator\">/</span><span class=\"token number\">48</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n       value<span class=\"token punctuation\">.</span>rows <span class=\"token operator\">=</span> rows\n       value<span class=\"token punctuation\">.</span>v<span class=\"token operator\">=</span>str\n       self<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><blockquote>\n<p>注：这里的<code>input</code>不可以使用受控用法，即绑定<code>value</code>，这样会导致<code>setState</code>时触发重新渲染，会打断<code>IOS</code>原生输入法的拼音输入，只绑定<code>defaultValue</code>就可以</p>\n</blockquote>\n<p>图片上传采用了和宝贝主图一样的处理方式</p>\n<hr>\n<h2 id=\"宝贝属性\"><a class=\"header-anchor\" href=\"#宝贝属性\" aria-hidden=\"true\">#</a> 宝贝属性</h2>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i4/1810749336/O1CN01T9pdAP2IpwB5LdRom_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>宝贝属性</em>\n    </p>\n</p>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i3/1810749336/O1CN013IGjgV2IpwB6VBA9c_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>枚举属性</em>\n    </p>\n</p>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i2/1810749336/O1CN01MEJUfu2IpwB3wYHWv_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>普通度量衡</em>\n    </p>\n</p>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i3/1810749336/O1CN01HYluzx2IpwB7vdFzd_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>时间度量衡</em>\n    </p>\n</p>\n<ul>\n<li>调用接口<code>taobao.itemprops.get</code>获取该类目下的所有属性，大致分为4类\n<ol>\n<li><strong>枚举属性</strong>，使用选择器进行选择，结果拼入<code>props</code>字段</li>\n<li><strong>自定义属性</strong>，用户自定义输入，结果拼入<code>input_pids</code> <code>input_str</code>字段</li>\n<li><strong>普通度量衡属性</strong>，含有可选单位和属性值，结果拼入<code>input_pids</code> <code>input_str</code>字段</li>\n<li><strong>时间度量衡属性</strong>，含有单位和属性值或者输入模板，结果拼入<code>input_pids</code> <code>input_str</code>字段</li>\n</ol>\n</li>\n</ul>\n<blockquote>\n<p><a href=\"https://open.taobao.com/doc.htm?docId=102629&amp;docType=1\" target=\"_blank\" rel=\"noopener noreferrer\">参考链接<OutboundLink/></a></p>\n</blockquote>\n<hr>\n<h2 id=\"宝贝规格（销售属性）\"><a class=\"header-anchor\" href=\"#宝贝规格（销售属性）\" aria-hidden=\"true\">#</a> 宝贝规格（销售属性）</h2>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i2/1810749336/O1CN01gFobSW2IpwB6XeqIj_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>sku</em>\n    </p>\n</p>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i1/1810749336/O1CN01eGAb7E2IpwAyjcrSE_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>普通度量衡</em>\n    </p>\n</p>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i4/1810749336/O1CN01AHL3T92IpwB7wRXXs_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>备注</em>\n    </p>\n</p>\n<ol>\n<li>\n<p>这里属性的处理逻辑和宝贝属性差不多，调用接口<code>taobao.itemprops.get</code>获取该类目下的销售属性<code>is_sale_prop===true</code></p>\n<ul>\n<li>大致分为类\n<ol>\n<li><strong>颜色属性</strong><code>is_color_prop===true</code>,可长按输入备注，也可以进行自定义（暂时不考虑支持）</li>\n<li><strong>普通枚举属性</strong>，只可以选择不可以输入备注</li>\n<li><strong>自定义属性</strong>，用户可自定义输入</li>\n<li><strong>度量衡属性</strong>，需按模板格式填写，可对单位进行选择</li>\n</ol>\n<blockquote>\n<p>其中<strong>颜色属性</strong>和<strong>普通枚举属性</strong>拼入<code>sku_properties</code>字段，拼入<code>props</code>字段，所有<strong>用户自定义属性</strong>均拼入<code>sku_properties</code>字段，拼入<code>input_custon_cpv</code>字段，不拼入<code>props</code>字段，备注属性拼入<code>cpv_memo</code>字段</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p>商品有多个<code>sku</code>的情况，比如某商品有<code>颜色分类</code>，<code>长度</code>和<code>尺寸</code>三个销售属性，用户选择了两个颜色（白色，黑色），三个尺码（S,M,L），三个规格（大，中，小），那么该商品的sku总数为<code>2*3*3=18个</code></p>\n</li>\n</ol>\n<h3 id=\"填坑：\"><a class=\"header-anchor\" href=\"#填坑：\" aria-hidden=\"true\">#</a> 填坑：</h3>\n<ul>\n<li>枚举属性的删除只需要在对应字段里将<code>pv</code>对去掉就可以，而自定义属性无论如何都删除不了，后来才发现要将入参<code>is_replace_sku</code>置为<code>true</code>才可以</li>\n</ul>\n<hr>\n<h2 id=\"运费模板\"><a class=\"header-anchor\" href=\"#运费模板\" aria-hidden=\"true\">#</a> 运费模板</h2>\n<p align=\"center\">\n    <img src=\"https://img.alicdn.com/imgextra/i1/1810749336/O1CN01Aq605h2IpwAylJ7UV_!!1810749336.png\" alt=\"Sample\"  width=\"300\">\n    <p align=\"center\">\n        <em>运费模板</em>\n    </p>\n</p>\n<p><strong>这里复用了林立全的运费模板组件</strong></p>\n<blockquote>\n<p>注：当用户选择运费模板时，自定义的发货地字段无效，将会优先使用运费模板中的发货地</p>\n</blockquote>\n<hr>\n<h2 id=\"发布总流程\"><a class=\"header-anchor\" href=\"#发布总流程\" aria-hidden=\"true\">#</a> 发布总流程</h2>\n<h3 id=\"淘宝类目属性获取（规则获取）\"><a class=\"header-anchor\" href=\"#淘宝类目属性获取（规则获取）\" aria-hidden=\"true\">#</a> 淘宝类目属性获取（规则获取）</h3>\n<h4 id=\"可发类目获取taobao-itemcats-get\"><a class=\"header-anchor\" href=\"#可发类目获取taobao-itemcats-get\" aria-hidden=\"true\">#</a> 可发类目获取<code>taobao.itemcats.get</code></h4>\n<blockquote>\n<ul>\n<li>入参：<code>parent_cid=0</code></li>\n<li>出参：所有的可供发布的一级类目</li>\n</ul>\n</blockquote>\n<p>叶子类目获取：再次循环调用此接口，入参 <code>parent_cid=</code>选择一级类目<code>id</code>，获得下一级类目<code>id</code>，直至获取叶子类目</p>\n<p><strong>注意：商品需要挂靠在叶子类目发布</strong></p>\n<h4 id=\"标准商品类目属性获取taobao-itemprops-get\"><a class=\"header-anchor\" href=\"#标准商品类目属性获取taobao-itemprops-get\" aria-hidden=\"true\">#</a> 标准商品类目属性获取<code>taobao.itemprops.get</code></h4>\n<blockquote>\n<ul>\n<li>入参：cid=1512(手机类目) 其他选填</li>\n<li>出参：所有的一级类目属性项和属性值</li>\n</ul>\n</blockquote>\n<h3 id=\"商品发布-taobao-item-add\"><a class=\"header-anchor\" href=\"#商品发布-taobao-item-add\" aria-hidden=\"true\">#</a> 商品发布 <code>taobao.item.add</code></h3>\n<h4 id=\"发布步骤\"><a class=\"header-anchor\" href=\"#发布步骤\" aria-hidden=\"true\">#</a> 发布步骤</h4>\n<ul>\n<li>步骤1：必填字段准备–基本的信息字段值</li>\n</ul>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"location.state\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"浙江\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"location.city\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"杭州\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"num\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"999\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"price\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"999\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"fixed\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"stuff_status\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"new\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"测试商品请不要拍\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"desc\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"这是一个好商品\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"cid\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"50000671\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><ul>\n<li>\n<p>步骤2：属性值填写</p>\n<blockquote>\n<p>需拼接字段<code>props</code> <code>input_pids</code> <code>input_str</code> <code>input_custom_cpv</code> <code>sku_properties</code></p>\n</blockquote>\n<ul>\n<li>非销售属性拼接\n<ul>\n<li>普通属性值枚举\n<ul>\n<li>写入<code>props</code>字段， 填入<code>pid:vid</code> 来自类目属性值获取的结果</li>\n</ul>\n</li>\n<li>普通自定义输入属性值\n<ul>\n<li>写入<code>input_pids</code> <code>input_str</code></li>\n<li>不写入<code>props</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>销售属性拼接\n<ul>\n<li>枚举值的销售属性\n<ul>\n<li>写入<code>props</code></li>\n<li>写入<code>sku_properties</code></li>\n</ul>\n</li>\n<li>自定义的销售属性\n<ul>\n<li>写入<code>input_custom_cpv</code></li>\n<li>写入<code>props</code></li>\n<li>写入<code>sku_properties</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>SKU拼接\n<ul>\n<li>需拼接字段\n<ul>\n<li><code>sku_properties</code></li>\n<li><code>sku_quantities</code></li>\n<li><code>sku_prices</code></li>\n<li><code>sku_outer_ids</code></li>\n<li><code>sku_barcode</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>步骤3：图片上传</p>\n<ul>\n<li>涉及API\n<ul>\n<li><code>taobao.picture.upload</code>(单张图片上传到图片空间)</li>\n<li><code>taobao.item.img.upload</code>（商品图片上传）</li>\n<li><code>taobao.item.propimg.upload</code>（商品属性图片上传）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>步骤4：图片关联</p>\n<ul>\n<li>\n<p>商品主图</p>\n<ul>\n<li>使用<code>taobao.item.add</code> 接口操作\n<blockquote>\n<p>说明：可传图文件字节 image，也可传图片链接 pic_path ，两个都传，优先使用pic_path</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p>商品图片关联（发布成功后可以关联，需要商品id）</p>\n<ul>\n<li><code>taobao.item.joint.img</code></li>\n</ul>\n</li>\n<li>\n<p>属性图片关联（颜色图片，发布成功后可以关联，需要商品id）</p>\n<ul>\n<li><code>taobao.item.joint.propimg</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>步骤5：邮寄选项</p>\n<blockquote>\n<p>注意：后台建好自己的运费模板，\n涉及字段：<code>postage_id</code>（运费模板id）</p>\n</blockquote>\n</li>\n<li>\n<p>步骤6：拼接整个商品发布字段</p>\n</li>\n</ul>\n<p>例：</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>param <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    approve_status<span class=\"token punctuation\">:</span> <span class=\"token string\">\"onsale\"</span><span class=\"token punctuation\">,</span>\n    cid<span class=\"token punctuation\">:</span> <span class=\"token number\">50012413</span><span class=\"token punctuation\">,</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"防踢被\"</span><span class=\"token punctuation\">,</span>\n    pic_path<span class=\"token punctuation\">:</span> <span class=\"token string\">\"i3/1810749336/O1CN01m2x81h2IpwB5oXTSS_!!1810749336.png\"</span><span class=\"token punctuation\">,</span>\n    price<span class=\"token punctuation\">:</span> <span class=\"token string\">\"120\"</span><span class=\"token punctuation\">,</span>\n    num<span class=\"token punctuation\">:</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span>\n    desc<span class=\"token punctuation\">:</span> <span class=\"token string\">\"&lt;p>儿童防踢睡袋&lt;/p>\"</span><span class=\"token punctuation\">,</span>\n    \n    props<span class=\"token punctuation\">:</span> <span class=\"token string\">\"20000:20455;122276315:3267702;20551:105255;20017:4306831;1627207:28321;122216547:3609877\"</span><span class=\"token punctuation\">,</span>\n    input_pids<span class=\"token punctuation\">:</span> <span class=\"token string\">\"13021751\"</span><span class=\"token punctuation\">,</span>\n    input_str<span class=\"token punctuation\">:</span> <span class=\"token string\">\"货号自定义\"</span><span class=\"token punctuation\">,</span>\n    \n    sku_outer_ids<span class=\"token punctuation\">:</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span>\n    sku_prices<span class=\"token punctuation\">:</span> <span class=\"token string\">\"120,120\"</span><span class=\"token punctuation\">,</span>\n    sku_properties<span class=\"token punctuation\">:</span> <span class=\"token string\">\"1627207:28321;122216547:3609877,1627207:28321;122216547:-1\"</span><span class=\"token punctuation\">,</span>\n    sku_quantities<span class=\"token punctuation\">:</span> <span class=\"token string\">\"24,24\"</span><span class=\"token punctuation\">,</span>\n    input_custom_cpv<span class=\"token punctuation\">:</span> <span class=\"token string\">\"122216547:-1:小猪佩奇加绒款\"</span><span class=\"token punctuation\">,</span>\n    cpv_memo<span class=\"token punctuation\">:</span> <span class=\"token string\">\"1627207:28321:颜色偏淡\"</span><span class=\"token punctuation\">,</span>\n    \n    postage_id<span class=\"token punctuation\">:</span> <span class=\"token number\">20589904471</span><span class=\"token punctuation\">,</span>\n    item_weight<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    seller_cids<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><hr>\n<h2 id=\"附：controller部分函数\"><a class=\"header-anchor\" href=\"#附：controller部分函数\" aria-hidden=\"true\">#</a> 附：<code>controller</code>部分函数</h2>\n<p><a id=\"pic_space_folder_handler\"></a></p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code> <span class=\"token comment\">/**\n   * 图片空间文件夹处理\n   */</span>\n  <span class=\"token function\">pic_space_folder_handler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n    <span class=\"token function\">webSessionIsOk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token comment\">//判断授权是否正常</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> sessionKey <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>sessionKey\n        <span class=\"token keyword\">const</span> param <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>sessionKey<span class=\"token punctuation\">}</span>\n        <span class=\"token function\">categoryHandler</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          self<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            pic_category_id<span class=\"token punctuation\">:</span> result<span class=\"token punctuation\">.</span>data\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><hr>\n<h2 id=\"附：component部分实现\"><a class=\"header-anchor\" href=\"#附：component部分实现\" aria-hidden=\"true\">#</a> 附：<code>Component</code>部分实现</h2>\n<h4 id=\"actionrow\"><a class=\"header-anchor\" href=\"#actionrow\" aria-hidden=\"true\">#</a> <code>ActionRow</code></h4>\n<p><a id=\"actionrow\"></a></p>\n<!--beforebegin--><div class=\"language-html extra-class\"><!--afterbegin--><pre v-pre class=\"language-html\"><code>export default class ActionRow extends Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      warn:false\n    }\n  }\n\n  render() {\n    const left = this.props.left || 0\n    const border = style.bottomBorder\n    return (\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{[style.actionRowContainer,</span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">{width:</span></span> <span class=\"token attr-name\">750</span> <span class=\"token attr-name\">-</span> <span class=\"token attr-name\">left},</span>\n        <span class=\"token attr-name\">this.props.last</span> <span class=\"token attr-name\">&amp;&amp;</span> <span class=\"token attr-name\">border,</span>\n        <span class=\"token attr-name\">this.props.blank</span> <span class=\"token attr-name\">&amp;&amp;</span> <span class=\"token attr-name\"><span class=\"token namespace\">{marginBottom:</span></span> <span class=\"token attr-name\">'18rem'},]}</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{style.required}</span><span class=\"token punctuation\">></span></span>{this.props.required?'*':''}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{[style.actionRow,</span>\n          <span class=\"token attr-name\">!this.props.last</span> <span class=\"token attr-name\">&amp;&amp;</span> <span class=\"token attr-name\">border,</span>\n          <span class=\"token attr-name\">this.props.style]}</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{{</span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">flexDirection:</span></span> <span class=\"token attr-name\">'row',</span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">justifyContent:</span></span> <span class=\"token attr-name\">'space-between',</span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">alignItem:</span></span> <span class=\"token attr-name\">'center',</span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">width:</span></span> <span class=\"token attr-name\">750</span> <span class=\"token attr-name\">-</span> <span class=\"token attr-name\">left</span> <span class=\"token attr-name\">-</span> <span class=\"token attr-name\">38</span>\n          <span class=\"token attr-name\">}}</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{[style.labelContainer,this.props.labelStyle]}</span><span class=\"token punctuation\">></span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{[style.labelText,this.props.labelStyle]}</span><span class=\"token punctuation\">></span></span>{this.props.label}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>View</span><span class=\"token punctuation\">></span></span>\n            {this.renderAction()}\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>View</span><span class=\"token punctuation\">></span></span>\n          {this.state.warn&amp;&amp;\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{style.warnContainer}</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{style.warning}</span><span class=\"token punctuation\">></span></span>{this.props.warn}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>View</span><span class=\"token punctuation\">></span></span>}\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>View</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>View</span><span class=\"token punctuation\">></span></span>\n    )\n  }\n\n  renderAction() {\n    if (this.props.type === 'input') {\n      if (this.props.multi) {\n        return (\n          &lt;Input style={[style.multiInput, QN.os.ios &amp;&amp; {paddingLeft: '15rem'}]}\n                 multiple={true}\n                 ref={'multiple'}\n                 id=\"multiple\"\n                 placeholder={'请输入'}\n                 defaultValue={this.props.value}\n                 onInput={this.onInput.bind(this)}\n                 rows={3}\n          />\n        )\n      } else {\n        if(this.props.disabled){\n          return(\n            &lt;View onClick={()=>{Toast.toast('商品总库存不可编辑')}} style={style.disabled}>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{style.labelText}</span><span class=\"token punctuation\">></span></span>{this.props.value||0}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>View</span><span class=\"token punctuation\">></span></span>\n          )\n        }else{\n          return(\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Input</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{style.input}</span>\n                   <span class=\"token attr-name\">disabled</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{this.props.disabled}</span>\n                   <span class=\"token attr-name\">htmlType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{this.props.htmlType}</span>\n                   <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{this.props.placeholder</span> <span class=\"token attr-name\">||</span> <span class=\"token attr-name\">'请输入'}</span>\n                   <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{this.props.value}</span>\n                   <span class=\"token attr-name\">onInput</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{this.onInput.bind(this)}</span>\n            <span class=\"token punctuation\">/></span></span>\n            )\n        }\n      }\n    } else {\n      return (\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TouchableHighlight</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{style.selectContainer}</span> <span class=\"token attr-name\">onPress</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{this.props.onPress}</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{[style.placeholder,</span>\n            <span class=\"token attr-name\">this.props.value</span> <span class=\"token attr-name\">&amp;&amp;</span> <span class=\"token attr-name\"><span class=\"token namespace\">{color:</span></span> <span class=\"token attr-name\">'#333333'},</span>\n            <span class=\"token attr-name\">this.props.disabled</span> <span class=\"token attr-name\">&amp;&amp;</span> <span class=\"token attr-name\"><span class=\"token namespace\">{marginRight:</span></span> <span class=\"token attr-name\">'50rem'}]}</span><span class=\"token punctuation\">></span></span>\n            {this.props.value || this.props.placeholder || '请选择'}\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n          {!this.props.disabled &amp;&amp; &lt;Icon name={'arrowRight'} style={style.arrowRight}/>}\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TouchableHighlight</span><span class=\"token punctuation\">></span></span>\n      )\n    }\n  }\n  onInput(e){\n    if(this.props.warnReg){\n          this.setState({\n            warn:!this.props.warnReg(e.value)\n          })\n      this.props.onInput(e)\n    }else{\n      this.props.onInput(e)\n    }\n  }\n}\n</code></pre>\n<!--beforeend--></div><!--afterend--><h4 id=\"heightprovider\"><a class=\"header-anchor\" href=\"#heightprovider\" aria-hidden=\"true\">#</a> <code>HeightProvider</code></h4>\n<p><a id=\"heightProvider\"></a></p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">import</span> <span class=\"token constant\">QN</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'QAP-SDK'</span>\n<span class=\"token keyword\">let</span> componentMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//注册组件实例</span>\n<span class=\"token keyword\">let</span> keyBoardHeight<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">//安卓端处理</span>\n  <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Global.KeyboardWillShow'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>height<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    keyBoardHeight<span class=\"token operator\">=</span>height\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Global.KeyboardWillHide'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    keyBoardHeight<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">component</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token comment\">//组件注册，如果组件需要进行高度调整，将组件实例添加到map，在高度变化时返回键盘高度</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">.</span>name<span class=\"token operator\">&amp;&amp;</span>component<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    componentMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>component<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> keyBoardHeight\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">component</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token comment\">//组件注销</span>\n  componentMap<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span>componentMap<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//在高度变化时返回键盘高度</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>componentMap<span class=\"token punctuation\">.</span>size<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> v <span class=\"token keyword\">of</span> componentMap<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      v<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        keyBoardHeight<span class=\"token punctuation\">:</span>keyBoardHeight\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h5 id=\"使用方法：\"><a class=\"header-anchor\" href=\"#使用方法：\" aria-hidden=\"true\">#</a> 使用方法：</h5>\n<ul>\n<li>在组件构建完毕后进行注册</li>\n</ul>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">let</span> keyBoardHeight <span class=\"token operator\">=</span> <span class=\"token function\">register</span><span class=\"token punctuation\">(</span>CategorySelection<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      keyBoardHeight<span class=\"token punctuation\">:</span> keyBoardHeight\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><blockquote>\n<p>获取初始键盘高度，将其放入组件<code>state</code>中</p>\n</blockquote>\n<ul>\n<li>在<code>render</code>方法中动态为组件设置高度</li>\n</ul>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>const {height, width} = window.screen,//屏幕像素\n pureHeight = height / (width / 750) //屏幕真实高度（rem）\n body_height = pureHeight - this.state.keyBoardHeight//组件高度为真实高度减去键盘高度\n\n return &lt;View  style={[style.dialogWrap, {height: height}]}&gt;\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>这样在呼出键盘时，由于我们已经将组件实例注册到<code>heightProvider</code>中，所以会自动调用<code>setState</code>方法触发重新渲染，更新键盘高度</p>\n</div>\n",null]}