{"remainingRequest":"/Users/7revor/Documents/workspace/vue_press/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/7revor/Documents/workspace/vue_press/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/7revor/Documents/workspace/vue_press/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/7revor/Documents/workspace/vue_press/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/7revor/Documents/workspace/vue_press/docs/React/closeKeyBoard.md?vue&type=template&id=2ecce754&","dependencies":[{"path":"/Users/7revor/Documents/workspace/vue_press/docs/React/closeKeyBoard.md","mtime":1553499046038},{"path":"/Users/7revor/Documents/workspace/vue_press/node_modules/cache-loader/dist/cjs.js","mtime":1553505755456},{"path":"/Users/7revor/Documents/workspace/vue_press/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1553505756301},{"path":"/Users/7revor/Documents/workspace/vue_press/node_modules/cache-loader/dist/cjs.js","mtime":1553505755456},{"path":"/Users/7revor/Documents/workspace/vue_press/node_modules/vue-loader/lib/index.js","mtime":1553505756301},{"path":"/Users/7revor/Documents/workspace/vue_press/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1553505767409}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h2\", { attrs: { id: \"现状\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#现状\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 现状\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"QAP安卓端在弹出键盘时，我们点击键盘上的完成按钮，键盘会自动收起。如果输入完成后未点击完成按钮，直接点击保存等相关操作，那么呼出的这个键盘就会一直保留在界面上。\\n我们现有的解决方式是给Input组件添加ref属性\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"<\")\n            ]),\n            _vm._v(\"Input ref\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'textInput'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"/\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\">\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [\n        _vm._v(\"然后再保存或者其他操作中，手动让输入框失去焦点来关闭键盘\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"save\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"this\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"refs\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\" textInput\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"blur\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"缺点\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#缺点\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 缺点\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"这种处理方式在界面中输入框较少时比较好用。但如果这个输入框是动态生成的（追加don节点的方式，无法为动态生成的组件标记ref），又或者界面中有十几个Input组件，那就行不通了。\\n这时候可以采取此种解决方式：\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"优化\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#优化\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 优化\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"首先，在需要调用Input的页面（可以是弹窗），对Input做处理：\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"import\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"Input\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"from\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'nuke'\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"class\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"MyPage\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"extends\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"Component\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"constructor\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n              _vm._v(\"props\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"super\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"props\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"//对input的原型进行修改，让所有的input实例获得焦点时都触发此方法\"\n              )\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"Input\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"prototype\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\n              \"span\",\n              {\n                pre: true,\n                attrs: { class: \"token function-variable function\" }\n              },\n              [_vm._v(\"focusHandler\")]\n            ),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n              _vm._v(\"element\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"//e中的currentTarget为当前获取焦点的组件实例，也就是通过this.refs.textInput获取到的dom\"\n              )\n            ]),\n            _vm._v(\"\\n  Input\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"currentTarget \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" element\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"currentTarget\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"//为Input类添加静态属性，即当前被激活的Input实例\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [_vm._v(\"这样一来，我们在保存方法中就可以直接\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _vm._v(\"  Input\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"currentTarget\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"&&\")\n            ]),\n            _vm._v(\"Input\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"currentTarget\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"blur\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [\n        _vm._v(\"这样就可以实现关闭键盘的功能，界面中再多的输入框也不怕了。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"注意点：\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#注意点：\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 注意点：\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"如果你的页面是弹窗等组件，在保存后需要执行组件销毁，这里要注意blur方法是一个异步方法，由于js是单线程，这个方法不会立即执行，而是会被放入任务队列，在你的当前代码执行完毕（也就是所有的同步代码执行完毕）后才会调用。这样一来，销毁组件就会发生在你的blur事件之前，那么blur也就不会生效了。\\n解决方式利用setTimeout，由于setTimeout中的方法也不会立即执行，而是在计时器结束后被放入任务队列，那么我们的blur代码在任务队列中的执行顺序就会在组件销毁之前了\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _vm._v(\"Input\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"currenttarget\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"blur\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"//处理代码逻辑\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"setTimeout\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=>\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"this\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"destory\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"//销毁组件\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"100\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [\n        _vm._v(\"这样一来，\"),\n        _c(\"code\", [_vm._v(\"blur()\")]),\n        _vm._v(\"方法就可以正常执行了\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}