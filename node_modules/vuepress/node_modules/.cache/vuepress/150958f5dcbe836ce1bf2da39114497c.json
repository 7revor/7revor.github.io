{"remainingRequest":"/Users/7revor/WebstormProjects/vue_press/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/7revor/WebstormProjects/vue_press/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/7revor/WebstormProjects/vue_press/docs/React/heightProvider.md?vue&type=template&id=0b080d02&","dependencies":[{"path":"/Users/7revor/WebstormProjects/vue_press/docs/React/heightProvider.md","mtime":1553765611051},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/cache-loader/dist/cjs.js","mtime":1553505755456},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1553505756301},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/cache-loader/dist/cjs.js","mtime":1553505755456},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/vue-loader/lib/index.js","mtime":1553505756301},{"path":"/Users/7revor/WebstormProjects/vue_press/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1553505767409}],"contextDependencies":[],"result":["\n<div class=\"content\"><h2 id=\"现状\"><a class=\"header-anchor\" href=\"#现状\" aria-hidden=\"true\">#</a> 现状</h2>\n<p>上文讲过了动态弹窗组件，我们可以灵活的控制弹窗交互，减少代码耦合。但是有这么一种<strong>特例</strong>。</p>\n<h3 id=\"特例\"><a class=\"header-anchor\" href=\"#特例\" aria-hidden=\"true\">#</a> 特例</h3>\n<p>如果弹窗组件中含有输入框，在IOS平台下，当输入框呼起键盘时，会自动调整弹窗高度不会出现遮挡。\n而在安卓系统中，系统不会对遮挡情况进行处理，此时我们就需要根据键盘事件自己来调整组件位置。</p>\n<h2 id=\"原理\"><a class=\"header-anchor\" href=\"#原理\" aria-hidden=\"true\">#</a> 原理</h2>\n<ul>\n<li>将键盘事件进行全局管理，为所有需要自适应的组件分发键盘高度。</li>\n<li>利用React的特性，将键盘高度放在各组件<code>state</code>中进行管理，当高度改变时，组件重新渲染。</li>\n</ul>\n<h2 id=\"实现\"><a class=\"header-anchor\" href=\"#实现\" aria-hidden=\"true\">#</a> 实现</h2>\n<h3 id=\"组件注册\"><a class=\"header-anchor\" href=\"#组件注册\" aria-hidden=\"true\">#</a> 组件注册</h3>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">import</span> <span class=\"token constant\">QN</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'QAP-SDK'</span>\n<span class=\"token keyword\">let</span> componentMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 组件集合</span>\n  keyBoardHeight<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token comment\">//初始键盘高度</span>\n  \n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">component</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">.</span>name<span class=\"token operator\">&amp;&amp;</span>component<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    componentMap<span class=\"token punctuation\">[</span>component<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>component<span class=\"token punctuation\">.</span>instance\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> keyBoardHeight\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ul>\n<li>将组件实例注册到全局变量<code>componentMap</code>并返回当前键盘高度</li>\n</ul>\n<h3 id=\"监听事件\"><a class=\"header-anchor\" href=\"#监听事件\" aria-hidden=\"true\">#</a> 监听事件</h3>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>  <span class=\"token comment\">/**\n   * 事件监听\n   */</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Global.KeyboardWillShow'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>height<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      keyBoardHeight<span class=\"token operator\">=</span>height\n      <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token constant\">QN</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Global.KeyboardWillHide'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      keyBoardHeight<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n      <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ul>\n<li><code>Global.KeyboardWillShow</code>事件接受一个参数，值为键盘高度</li>\n<li>在安卓机的键盘显示和关闭时，将新的<code>keyBoardheight</code>分发给组件</li>\n</ul>\n<h3 id=\"状态分发\"><a class=\"header-anchor\" href=\"#状态分发\" aria-hidden=\"true\">#</a> 状态分发</h3>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> v <span class=\"token keyword\">of</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>componentMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        v<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          keyBoardHeight<span class=\"token punctuation\">:</span> keyBoardHeight\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ul>\n<li>遍历<code>componentMap</code>，调用组件实例的<code>setState()</code>来重新渲染组件</li>\n</ul>\n<h3 id=\"组件注销\"><a class=\"header-anchor\" href=\"#组件注销\" aria-hidden=\"true\">#</a> 组件注销</h3>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">component</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>componentMap<span class=\"token punctuation\">[</span>component<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">delete</span> componentMap<span class=\"token punctuation\">[</span>component<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ul>\n<li>组件销毁后，注销组件</li>\n</ul>\n<h2 id=\"调用方式\"><a class=\"header-anchor\" href=\"#调用方式\" aria-hidden=\"true\">#</a> 调用方式</h2>\n<h3 id=\"引入方法\"><a class=\"header-anchor\" href=\"#引入方法\" aria-hidden=\"true\">#</a> 引入方法</h3>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>logout<span class=\"token punctuation\">,</span> register<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"$util/heightProvider\"</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"constructor\"><a class=\"header-anchor\" href=\"#constructor\" aria-hidden=\"true\">#</a> <code>constructor</code></h3>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    MyComponent<span class=\"token punctuation\">.</span>instance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> keyBoardHeight <span class=\"token operator\">=</span> <span class=\"token function\">register</span><span class=\"token punctuation\">(</span>MyComponent<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      keyBoardHeight<span class=\"token punctuation\">:</span> keyBoardHeight\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ul>\n<li>通过<code>register</code>注册组件实例并得到一个当前键盘高度存入<code>state</code></li>\n</ul>\n<h3 id=\"render\"><a class=\"header-anchor\" href=\"#render\" aria-hidden=\"true\">#</a> <code>render</code></h3>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>screen<span class=\"token punctuation\">.</span>height <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>keyBoardHeight\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>height<span class=\"token punctuation\">:</span>height<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token comment\">/////</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ul>\n<li>在<code>heightProvider</code>中已经将<code>MyConponent</code>实例注册，所以在键盘高度发生变化时，会自动为所有注册过的组件<code>setState</code>重新渲染</li>\n</ul>\n<h3 id=\"组件注销-2\"><a class=\"header-anchor\" href=\"#组件注销-2\" aria-hidden=\"true\">#</a> 组件注销</h3>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>    <span class=\"token function\">logout</span><span class=\"token punctuation\">(</span>MyConponent<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>MyConponent<span class=\"token punctuation\">.</span>dom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>MyConponent<span class=\"token punctuation\">.</span>dom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}