{"remainingRequest":"/Users/7revor/Documents/workspace/vue_press/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/7revor/Documents/workspace/vue_press/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/7revor/Documents/workspace/vue_press/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/7revor/Documents/workspace/vue_press/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/7revor/Documents/workspace/vue_press/docs/React/Dialog.md?vue&type=template&id=d255eb1e&","dependencies":[{"path":"/Users/7revor/Documents/workspace/vue_press/docs/React/Dialog.md","mtime":1553499151426},{"path":"/Users/7revor/Documents/workspace/vue_press/node_modules/cache-loader/dist/cjs.js","mtime":1553505755456},{"path":"/Users/7revor/Documents/workspace/vue_press/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1553505756301},{"path":"/Users/7revor/Documents/workspace/vue_press/node_modules/cache-loader/dist/cjs.js","mtime":1553505755456},{"path":"/Users/7revor/Documents/workspace/vue_press/node_modules/vue-loader/lib/index.js","mtime":1553505756301},{"path":"/Users/7revor/Documents/workspace/vue_press/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1553505767409}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h2 id=\\\"介绍\\\"><a href=\\\"#介绍\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 介绍</h2> <p>最近在进行一个基于Weex的手机端项目，用了阿里的Rax组件，由于资源太少，市面上常见的组件都无法方便快捷的实现弹窗，所以自己从零开始研究了一个。</p> <h2 id=\\\"启发\\\"><a href=\\\"#启发\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 启发</h2> <p>一开始为了满足业务需要，简单的写了一个Dialog，但是这个Dialog的取消的确定事件都要以参数的性质传入这就导致使用不便，由ElementUI受到启发,于是想基于Promise实现一个方便好用的组件</p> <p>由于刚开始学习，水平比较菜，一些实现方式也是我自己琢磨出来的，如果有逻辑错误或者可以优化的地方欢迎提点指正。</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">$confirm</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'此操作将永久删除该文件, 是否继续?'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'提示'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n          confirmButtonText<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'确定'</span><span class=\\\"token punctuation\\\">,</span>\\n          cancelButtonText<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'取消'</span><span class=\\\"token punctuation\\\">,</span>\\n          type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'warning'</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">$message</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n            type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'success'</span><span class=\\\"token punctuation\\\">,</span>\\n            message<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'删除成功!'</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">$message</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n            type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'info'</span><span class=\\\"token punctuation\\\">,</span>\\n            message<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'已取消删除'</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> \\n</code></pre></div><p>原理本质是调用静态方法，然后在方法中控制窗口的显示，该方法返回一个Promise对象，大致思路为</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">let</span> myPromise<span class=\\\"token punctuation\\\">;</span>\\n <span class=\\\"token function-variable function\\\">open</span><span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=&gt;</span><span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">resolve<span class=\\\"token punctuation\\\">,</span> reject</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n            myPromise<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>resolve<span class=\\\"token punctuation\\\">,</span>reject<span class=\\\"token punctuation\\\">}</span><span class=\\\"token comment\\\">//此处把promise的resolve和reject方法存到变量中，</span>\\n                                      <span class=\\\"token comment\\\">//这样就可以在点击确定或者取消的时候对promise做相应的处理</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token function-variable function\\\">confirm</span><span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=&gt;</span><span class=\\\"token punctuation\\\">{</span>\\n    myPromise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token function-variable function\\\">cancel</span><span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=&gt;</span><span class=\\\"token punctuation\\\">{</span>\\n    myPromise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><p>这样一来，在父界面调用的时候逻辑清晰明了：</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code> myDialog<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">open</span><span class=\\\"token punctuation\\\">(</span>message<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=&gt;</span><span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token comment\\\">//此处处理确认逻辑</span>\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=&gt;</span><span class=\\\"token punctuation\\\">{</span>\\n                  <span class=\\\"token comment\\\">//此处处理取消逻辑</span>\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre></div><p>一开始我在项目中采取的方式是在每一个需要调用dialog组件的地方，手动把dialog插入到body的最底部，like this</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">import</span> MyDialog <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;../../components/dialog/MyDialog&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">//······</span>\\n<span class=\\\"token comment\\\">//······</span>\\n<span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token keyword\\\">return</span>\\n    <span class=\\\"token operator\\\">&lt;</span>View<span class=\\\"token operator\\\">&gt;</span>\\n        <span class=\\\"token comment\\\">//······</span>\\n        <span class=\\\"token comment\\\">//······</span>\\n\\n        <span class=\\\"token operator\\\">&lt;</span>MyDialog<span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">&gt;</span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>View<span class=\\\"token operator\\\">&gt;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><p>这样做毋庸置疑，耦合性将会非常高，在每一个需要调用的页面都要引入这个组件，看了看React的文档，研究出来一种目前我认为还可以的方式，那就是使用ReactDOM的 render方法来自动控制组件的渲染,以下是完整代码</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>createElement<span class=\\\"token punctuation\\\">,</span> Component<span class=\\\"token punctuation\\\">,</span> render<span class=\\\"token punctuation\\\">,</span> PureComponent<span class=\\\"token punctuation\\\">,</span> findDOMNode<span class=\\\"token punctuation\\\">,</span> unmountComponentAtNode<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'rax'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>View<span class=\\\"token punctuation\\\">,</span> Text<span class=\\\"token punctuation\\\">,</span> Dialog<span class=\\\"token punctuation\\\">,</span> Touchable<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'nuke'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> _self<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> myPromise<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> div<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Dialog</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">static</span> <span class=\\\"token function\\\">confirm</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">info</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        div <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createElement</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'div'</span><span class=\\\"token punctuation\\\">)</span>\\n        document<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">appendChild</span><span class=\\\"token punctuation\\\">(</span>div<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'&lt;PyDialog /&gt;'</span><span class=\\\"token punctuation\\\">,</span>div<span class=\\\"token punctuation\\\">)</span>\\n        _self<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n            type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`confirm`</span></span><span class=\\\"token punctuation\\\">,</span>\\n            info<span class=\\\"token punctuation\\\">:</span> info\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">resolve<span class=\\\"token punctuation\\\">,</span> reject</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n            myPromise <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        _this <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token function\\\">destory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">unmountComponentAtNode</span><span class=\\\"token punctuation\\\">(</span>div<span class=\\\"token punctuation\\\">)</span>\\n        document<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">removeChild</span><span class=\\\"token punctuation\\\">(</span>div<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\">//组件销毁</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        myPromise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">destory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        myPromise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">destory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span>\\n\\n        <span class=\\\"token operator\\\">&lt;</span>View<span class=\\\"token operator\\\">&gt;</span>\\n            <span class=\\\"token operator\\\">&lt;</span>View<span class=\\\"token operator\\\">&gt;</span>\\n                <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>info<span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>View<span class=\\\"token operator\\\">&gt;</span>\\n            <span class=\\\"token operator\\\">&lt;</span>View style<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>myStyle<span class=\\\"token punctuation\\\">.</span>bottomBox<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&gt;</span>\\n                <span class=\\\"token operator\\\">&lt;</span>Touchable onPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>reject<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&gt;</span>\\n                    <span class=\\\"token operator\\\">&lt;</span>Text style<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>myStyle<span class=\\\"token punctuation\\\">.</span>btnGray<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&gt;</span>取消<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Text<span class=\\\"token operator\\\">&gt;</span>\\n                <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Touchable<span class=\\\"token operator\\\">&gt;</span>\\n                <span class=\\\"token operator\\\">&lt;</span>Touchable onPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>resolve<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&gt;</span>\\n                    <span class=\\\"token operator\\\">&lt;</span>Text style<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>myStyle<span class=\\\"token punctuation\\\">.</span>btnRed<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&gt;</span>确认<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Text<span class=\\\"token operator\\\">&gt;</span>\\n                <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Touchable<span class=\\\"token operator\\\">&gt;</span>\\n            <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>View<span class=\\\"token operator\\\">&gt;</span>\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>View<span class=\\\"token operator\\\">&gt;</span>\\n\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><h2 id=\\\"调用\\\"><a href=\\\"#调用\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 调用</h2> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">import</span> Dialog <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./Dialog'</span>\\n\\nPyDialog<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">confirm</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`确定要删除吗？`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=&gt;</span><span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">delete</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">data</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=&gt;</span><span class=\\\"token punctuation\\\">{</span>\\n                    \\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre></div>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}